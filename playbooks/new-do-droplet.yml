---
- name: provision a new digital ocean droplet
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    do_droplet_name: zachss.ansible.fun
    do_oauth_token: "{{ lookup('env', 'DO_API_TOKEN') }}"
    domain: "{{ do_droplet_name }}"
    do_droplet_size: s-1vcpu-1gb
    do_droplet_region: SFO3
    do_droplet_image: ubuntu-22-10-x64
    do_droplet_project: Nos
    do_droplet_enable_monitoring: true
    do_droplet_enable_backups: true
    do_droplet_tags:
      - development
    gh_user_keys_to_add:
      - cooldracula
      - zachmandeville
      - mplorentz
      - boreq
    admin_username: admin
    inv:  rss
    inv_groups:
      - rss
      - dev
    add_cloudflare_record: true
    cloudflare_email: code@solarpunk.cool
    cloudflare_api_token: "{{ lookup('env', 'CLOUDFLARE_API_TOKEN')}}"
  roles:
    - new-do-droplet
  post_tasks:
    - name: Refresh Inventory
      ansible.builtin.meta: refresh_inventory


- name: Run additional plays
  hosts: rss:&dev
  gather_facts: no
  vars:
    ansible_user: admin
  pre_tasks:
    # SSH Host key checking
    # https://stackoverflow.com/a/54735937/982195
    - name: Check known_hosts for {{ inventory_hostname }}
      local_action: shell ssh-keygen -F {{ inventory_hostname }}
      register: has_entry_in_known_hosts_file
      failed_when: false
      changed_when: false
      ignore_errors: yes
    - name: Ignore host key for {{ inventory_hostname }} on first run
      when: has_entry_in_known_hosts_file.rc == 1
      set_fact:
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    - name: Wait for connection
      ansible.builtin.wait_for_connection:
    - name: Gather Facts
      ansible.builtin.gather_facts:
  roles:
    - rsslay
