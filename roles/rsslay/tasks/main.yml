---
- name: Ensure rsslay dir exists
  ansible.builtin.file:
    path: "{{ homedir }}/rsslay"
    state: directory
    mode: '0755'

- name: Copy docker-compose.yml to rsslay dir
  ansible.builtin.template:
    src: docker-compose.yml.tpl
    dest: "{{ homedir }}/rsslay/docker-compose.yml"
    mode: 0644

- name: ensure docker is running
  ansible.builtin.service:
    name: docker
    state: started

- name: register whoami
  ansible.builtin.command: whoami
  register: who_i_am

- name: print whoami
  ansible.builtin.debug:
    msg: "{{ who_i_am }}"


- name: register id
  ansible.builtin.command: id
  register: my_id


- name: print whoami
  ansible.builtin.debug:
    msg: "{{ my_id }}"


- name: Start up rsslay
  community.docker.docker_compose:
    project_src: "{{ homedir }}/rsslay"
    build: false
    restarted: true
  register: service_started
  retries: 5
  until: service_started is success


- name: Set nginx config for all services
  become: true
  ansible.builtin.template:
    src: nginx.conf.tpl
    dest: /etc/nginx/sites-available/{{ domain }}
    mode: 0644


- name: Symlink site config to sites-enabled
  become: true
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ domain }}"
    dest: "/etc/nginx/sites-enabled/{{ domain }}"
    state: link


- name: UFW - Allow http/https connections
  become: true
  community.general.ufw:
    rule: allow
    name: "Nginx Full"


- name: UFW - Allow tcp connections for websockets
  become: true
  community.general.ufw:
    rule: allow
    port: 80
    proto: tcp


- name: Ensure config is valid
  become: true
  ansible.builtin.command: nginx -t
  changed_when: false


- name: Restart nginx
  become: true
  ansible.builtin.service:
    name: nginx
    state: restarted

- name: Copy systemd service for rsslay image update
  ansible.builtin.template:
    src: rsslay-image-update.service.tpl
    dest: "{{ homedir }}/rsslay/rsslay-image-update.service"
    mode: 0644


- name: Copy systemd timer for rsslay image update
  ansible.builtin.copy:
    src: rsslay-image-update.timer
    dest: "{{ homedir }}/rsslay/rsslay-image-update.timer"
    mode: 0644


- name: Copy systemd shell script for rsslay image update
  ansible.builtin.copy:
    src: rsslay-image-update.sh
    dest: "{{ homedir }}/rsslay/rsslay-image-update.sh"
    mode: 0755


- name: Symlink rsslay image update files to correct locations
  become: true
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  loop:
    - src: "{{ homedir }}/rsslay/rsslay-image-update.service"
      dest: /etc/systemd/system/rsslay-image-update.service
    - src: "{{ homedir }}/rsslay/rsslay-image-update.timer"
      dest: /etc/systemd/system/rsslay-image-update.timer
    - src: "{{ homedir }}/rsslay/rsslay-image-update.sh"
      dest: /usr/local/bin/rsslay-image-update.sh


- name: Enable image update service and timer
  become: true
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
  loop:
    - rsslay-image-update.service
    - rsslay-image-update.timer


- name: Start image update service
  become: true
  ansible.builtin.systemd:
    name: rsslay-image-update
    state: started
    daemon_reload: true
