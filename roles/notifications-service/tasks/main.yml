# Setup nos-notification-service-go on server
---
- name: Set notifications dir
  ansible.builtin.set_fact:
    notifications_dir: "{{ homedir }}/notifications"


- name: Create dir for AAA root certificate
  become: true
  ansible.builtin.file:
    path: /usr/local/share/ca-certificates/extra
    state: directory


- name: Copy AAA certificate to ca-certificates location
  become: true
  ansible.builtin.copy:
    src: AAACertificateServices.crt
    dest: /usr/local/share/ca-certificates/extra/AAACertificateServices.crt
  register: result


- name: Update certificates, if needed
  become: true
  ansible.builtin.command: update-ca-certificates
  when: result is changed


- name: Copy nginx config to sites available
  become: true
  ansible.builtin.template:
    src: nginx.conf.tpl
    dest: /etc/nginx/sites-available/{{ domain }}
    mode: 0644
    force: no


- name: Symlink site config to sites-enabled
  become: true
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ domain }}"
    dest: "/etc/nginx/sites-enabled/{{ domain }}"
    state: link


- name: UFW - Allow http/https connections
  become: true
  community.general.ufw:
    rule: allow
    name: "Nginx Full"


- name: UFW - Allow tcp connections for websockets
  become: true
  community.general.ufw:
    rule: allow
    port: 80
    proto: tcp


- name: Ensure config is valid
  become: true
  ansible.builtin.command: nginx -t
  changed_when: false


- name: Restart nginx
  become: true
  ansible.builtin.service:
    name: nginx
    state: restarted


- name: Ensure notifications dirs exists
  ansible.builtin.file:
    path: "{{ notifications_dir }}/certs"
    state: directory
    mode: '0755'


- name: Copy necessary template files to notifications dir
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ notifications_dir }}/{{ item.dest }}"
    mode: 0644
  loop:
    - src: docker-compose.yml.tpl
      dest: docker-compose.yml
    - src: env.notifications
      dest: .env


- name: Copy certs to notifications dir
  ansible.builtin.copy:
    src: "{{ cert.path }}"
    dest: "{{ homedir }}/notifications/certs/{{ cert.file }}"
    mode: 0644
  loop:
    - file: "{{ notifications_apns_certificate }}"
      path: "{{ notifications_apns_certificate_path }}"
    - file: "{{ notifications_firestore_credentials_json }}"
      path: "{{ notifications_firestore_credentials_json_path }}"
  loop_control:
    loop_var: cert


- name: Copy pubsub cert to notifications dir
  ansible.builtin.copy:
    src: "{{ cert.path }}"
    dest: "{{ homedir }}/notifications/certs/{{ cert.file }}"
    mode: 0644
  loop:
    - file: "{{ notifications_google_pubsub_credentials_json }}"
      path: "{{ notifications_google_pubsub_credentials_path }}"
  loop_control:
    loop_var: cert
  when: notifications_google_pubsub_enabled is true


- name: ensure docker is running
  ansible.builtin.service:
    name: docker
    state: started


- name: Start up notifications
  ansible.builtin.shell: "docker compose down && docker compose up -d"
  args:
    chdir: "{{ notifications_dir }}"
  register: service_started
  retries: 5
  until: service_started is success


- name: Setup the image updater
  ansible.builtin.include_role:
    name: image-update-service
  vars:
    service_name: notifications
    service_image: "{{ notifications_image }}"
    service_image_tag: "{{ notifications_image_tag }}"
    frequency: 3m
    working_dir: "{{ notifications_dir }}"


- name: Setup the health check
  ansible.builtin.include_role:
    name: health-check
  vars:
    health_endpoint: "{{ notifications_health_endpoint }}"