# Setup nos-crossposting-service on server
---
- name: Set events dir
  ansible.builtin.set_fact:
    events_dir: "{{ homedir }}/services/events"


- name: Ensure events directories exist
  ansible.builtin.file:
    path: "{{ events_dir }}/certs"
    state: directory
    mode: '0755'


- name: Copy necessary template files to events dir
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ events_dir }}/{{ item.dest }}"
    mode: 0644
  loop:
    - src: docker-compose.yml.tpl
      dest: docker-compose.yml
    - src: env.tpl
      dest: .env


- name: Copy pubsub cert to events dir
  ansible.builtin.copy:
    src: "{{ events_google_pubsub_credentials_json_path }}"
    dest: "{{ events_dir }}/certs/{{ events_google_pubsub_credentials_json }}"
    mode: 0644


- name: ensure docker is running
  ansible.builtin.service:
    name: docker
    state: started


- name: Start up events service
  ansible.builtin.shell: "docker compose down && docker compose up -d"
  args:
    chdir: "{{ events_dir }}"
  register: service_started
  retries: 5
  until: service_started is success


- name: Setup the image updater
  ansible.builtin.include_role:
    name: image-update-service
  vars:
    service_name: events
    service_image: "{{ events_image }}"
    service_image_tag: "{{ events_image_tag }}"
    frequency: 3m
    working_dir: "{{ events_dir }}"