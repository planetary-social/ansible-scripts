# Setup certificates for https using certbot and a cloudflare dns plugin
---
- name: Install certbot and plugins
  become: true
  ansible.builtin.package:
    pkg:
      - certbot
      - python3-certbot-nginx
      - python3-certbot-dns-cloudflare
    state: latest
    update_cache: yes
    cache_valid_time: 3600


- name: Create config directory
  ansible.builtin.file:
    path: "{{ homedir }}/.config/certbot"
    state: directory
    mode: 0755


- name: Upload cloudflare credentials
  ansible.builtin.template:
    src: cloudflare.ini.tpl
    dest: "{{ homedir }}/.config/certbot/cloudflare.ini"
    mode: 0600

# Some inventories have domains, some only a domain.  This simplifies the role across these inventories
- name: Establish domains
  ansible.builtin.set_fact:
    domains: "{{ domains if domains is defined else [ domain ] if domain is defined else [ inventory_hostname ] }}"


- name: Add certificates for host for all its domains
  become: true
  ansible.builtin.shell:
    cmd: |
      certbot certonly \
      --non-interactive \
      --agree-tos  \
      --dns-cloudflare \
      --dns-cloudflare-propagation-seconds=20 \
      --dns-cloudflare-credentials {{ homedir }}/.config/certbot/cloudflare.ini \
      --email {{ cert_email }} \
      -d {{ item + "," + domain[2:] if item.startswith("*.") else item }}
  loop: "{{ domains }}"


- name: Get latest options ssl conf
  become: true
  ansible.builtin.uri:
    url: 'https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf'
    method: GET
    dest: /etc/letsencrypt/options-ssl-nginx.conf


- name: Get latest ssl-dhparams
  become: true
  ansible.builtin.uri:
    url: 'https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem'
    method: GET
    dest: /etc/letsencrypt/ssl-dhparams.pem
